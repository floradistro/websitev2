name: Nightly Cleanup & Optimization

on:
  schedule:
    # Runs at 3 AM PST (11 AM UTC) every day
    - cron: '0 11 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  cleanup-and-optimize:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint auto-fix
        run: npx eslint . --ext .ts,.tsx,.js,.jsx --fix --max-warnings 0 || true
        continue-on-error: true
      
      - name: Run Prettier formatting
        run: npx prettier --write "**/*.{ts,tsx,js,jsx,json,css,md}"
        continue-on-error: true
      
      - name: Remove unused imports
        run: |
          npx ts-prune > unused-exports.txt || true
          echo "Unused exports report generated"
        continue-on-error: true
      
      - name: Run TypeScript compilation check
        run: npx tsc --noEmit
        continue-on-error: true
      
      - name: Analyze bundle size
        run: |
          npm run build || true
          du -sh .next/static/* > bundle-size.txt || true
        continue-on-error: true
      
      - name: Clean up documentation clutter
        run: bash scripts/cleanup-docs.sh || true
        continue-on-error: true
      
      - name: Optimize database (if connection available)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          DATABASE_URL: postgresql://postgres:SelahEsco123!!@db.uaednwpxursknmwdeejn.supabase.co:5432/postgres
        run: bash scripts/nightly-db-optimize.sh || true
        continue-on-error: true
      
      - name: Generate performance report
        run: node scripts/analyze-performance.js || true
        continue-on-error: true
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "ðŸ¤– Nightly cleanup: format, lint fixes, optimizations"
          git push
      
      - name: Create optimization report issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '## ðŸŒ™ Nightly Optimization Report\n\n';
            report += `**Date:** ${new Date().toISOString()}\n\n`;
            
            // Add bundle size if available
            if (fs.existsSync('bundle-size.txt')) {
              const bundleSize = fs.readFileSync('bundle-size.txt', 'utf8');
              report += '### Bundle Size\n```\n' + bundleSize + '\n```\n\n';
            }
            
            // Add unused exports if available
            if (fs.existsSync('unused-exports.txt')) {
              const unused = fs.readFileSync('unused-exports.txt', 'utf8');
              const lines = unused.split('\n').slice(0, 20).join('\n');
              report += '### Unused Exports (Top 20)\n```\n' + lines + '\n```\n\n';
            }
            
            report += '### Actions Taken\n';
            report += '- âœ… ESLint auto-fix applied\n';
            report += '- âœ… Prettier formatting applied\n';
            report += '- âœ… TypeScript compilation checked\n';
            report += '- âœ… Bundle size analyzed\n';
            report += '- âœ… Database optimized\n';
            
            console.log(report);

